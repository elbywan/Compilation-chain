fun `f15 (x1, x) = x1 [0] [0] (x1 [0] [1], (x) + (1))
fun `f11 (x1, m) = [ `f12, [ m ] ] fun `f12 (x1, f) = [ `f13, [ f, x1 [0] ] ]
 fun `f13 (x1, k) = x1 [1] [0] (x1 [1] [1], [ `f14, [ x1 [0], k ] ])
fun `f14 (x1, v) =
x1 [0] [0] (x1 [0] [1], v) [0] (x1 [0] [0] (x1 [0] [1], v) [1], x1 [1])
fun `f9 (x1, a) = a [0] (a [1], [ `f10, [  ] ]) fun `f10 (x1, x) = x
fun `f7 (x1, a) = [ `f8, [ a ] ] fun `f8 (x1, f) = f [0] (f [1], x1 [0])
let return = [ `f7, [  ] ] in
let run = [ `f9, [  ] ] in
let bind = [ `f11, [  ] ] in
run [0] (run [1], bind [0] (bind [1], return [0] (return [1], 1)) [0] (bind [0] (bind [1], return [0] (return [1], 1)) [1], [
`f15, [ return ] ]))