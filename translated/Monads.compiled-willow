fun `f24 (x1, x) = x1 [0] [0] (x1 [0] [1], (x) + (1)) 
fun `f20 (x1, m) = [ `f21, [ m ] ] fun `f21 (x1, f) = [ `f22, [ f, x1 [0] ] ]
 fun `f22 (x1, k) = x1 [1] [0] (x1 [1] [1], [ `f23, [ x1 [0], k ] ]) 
fun `f23 (x1, v) = 
x1 [0] [0] (x1 [0] [1], v) [0] (x1 [0] [0] (x1 [0] [1], v) [1], x1 [1]) 
fun `f18 (x1, a) = a [0] (a [1], [ `f19, [  ] ]) fun `f19 (x1, x) = x 
fun `f16 (x1, a) = [ `f17, [ a ] ] fun `f17 (x1, f) = f [0] (f [1], x1 [0]) 
let return = [ `f16, [  ] ] in 
let run = [ `f18, [  ] ] in 
let bind = [ `f20, [  ] ] in 
run [0] (run [1], bind [0] (bind [1], return [0] (return [1], 1)) [0] (bind [0] (bind [1], return [0] (return [1], 1)) [1], [ 
`f24, [ return ] ]))